---
import "../styles/global.css";

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  image?: string | undefined;
}

const {
  title = "Tio Irawan: Personal Site",
  description = "The personal site of Tio Irawan",
  image,
} = Astro.props;

// join Astro.site with image path
const imageOg = new URL(image || "", Astro.site).toString();
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<title>{title}</title>

<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<!-- social preview -->
<meta property="og:title" content={title} />
<meta property="og:image" content={imageOg} />
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content={title} />
<meta property="og:description" content={description} />

<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
  href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
  rel="stylesheet"
/>
<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("theme-dark");

  if (typeof localStorage !== "undefined") {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("theme-dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-2H7464X60L"
></script>
<script>
  declare global {
    interface Window {
      dataLayer: any[];
      gtag: (...args: any[]) => void;
    }
  }

  window.dataLayer = window.dataLayer || [];
  window.gtag = function (...args: any[]): void {
    window.dataLayer.push(arguments);
  };

  window.gtag("js", new Date());
  window.gtag("config", "G-2H7464X60L");
</script>
